### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  token: String
  user: User
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

enum Gender {
  divers
  man
  woman
}

type List {
  createdAt: DateTime!
  current: ListRevision
  id: String!
  name: String!
  owner: User
  ownerId: String!
  revisions: [ListRevision!]!
  status: ListStatus!
  updatedAt: DateTime!
}

input ListCreateInput {
  date: DateTime
  members: [ListMemberInput!]!
  name: String!
}

type ListMember {
  gender: Gender!
  id: String!
  listRevId: String!
  position: Int!
}

input ListMemberInput {
  gender: Gender!
  position: Int!
}

type ListRevision {
  createdAt: DateTime!
  id: String!
  members: [ListMember!]!
  ownerId: String!
  updatedAt: DateTime!
}

enum ListStatus {
  live
  proposed
  sandbox
}

type Mutation {
  createList(data: ListCreateInput!): List
  login(email: String!, password: String!): AuthPayload
  signup(email: String!, password: String!): AuthPayload
}

type Query {
  allUsers: [User!]!
  listById(id: Int): List
  me: User
}

enum SortOrder {
  asc
  desc
}

type User {
  email: String!
  id: String!
  lists: [List!]!
}

input UserCreateInput {
  email: String!
  lists: [ListCreateInput!]
}

input UserUniqueInput {
  email: String
  id: Int
}